1.代理模式：
    什么是代理模式：
        为一个对象提供一个替身，以控制对这个对象的访问。即通过代理对象访问目标对象。

    这样做的好处是：
        可以在目标对象实现的基础上，增强额外的功能操作，而不需要修改源代码。降低了耦合

    被代理对象可以是：
        远程对象
        创建开销大的对象
        需要安全控制的对象

    代理方式：
        静态代理
        动态(JDK/接口)代理
        Cglib代理：可以在内存中动态的创建对象，而不需要接口。他也可以是属于动态代理

        静态代理：
            使用时，需要定义接口或者父类，被代理对象（生产厂家）与代理对象（经销商）一起实现相同的接口或者是继承相同父类

            优点：在不修改原对象的功能前提下，能通过代理对象对目标功能扩展

            缺点：因为代理对象需要与目标对象实现一样的接口，所以会有很多代理类
            一旦接口增加方法，目标对象与代理对象都要维护

        动态代理(JDK代理/接口代理)：
            代理对象(经销商)不需要实现接口，但是被代理对象(生产厂家)要实现接口。

            是利用JDK的API（反射机制），动态的在内存中构建代理对象